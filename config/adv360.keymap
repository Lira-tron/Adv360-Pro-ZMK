
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp ESC  &kp NUMBER_1  &kp NUMBER_2    &kp N3     &kp N4  &kp N5                            &tog 1                                                                                           &mo 3  &kp N6  &kp N7     &kp N8   &kp N9         &kp N0  &kp MINUS
        &kp TAB         &kp Q         &kp W     &kp F      &kp P   &kp B                             &none                                                                                           &none   &kp J   &kp L      &kp U    &kp Y  &kp SEMICOLON   &kp BSLH
 &kp LEFT_SHIFT         &kp A         &kp R     &kp S      &kp T   &kp G                             &none             &kp LCTRL  &kp LALT                   &kp LGUI      &kp RCTRL                 &none   &kp M   &kp N      &kp E    &kp I          &kp O    &kp SQT
       &kp CAPS         &kp Z         &kp X     &kp C      &kp D   &kp V                                                          &kp HOME                  &kp PG_UP                                        &kp K   &kp H  &kp COMMA  &kp DOT       &kp FSLH  &kp RSHFT
          &mo 2         &none         &none  &kp LEFT  &kp RIGHT                    &mt LEFT_CONTROL ENTER  &mt LEFT_COMMAND ESC   &kp END                  &kp PG_DN  &kp BACKSPACE  &mt LEFT_SHIFT SPACE          &kp UP   &kp DOWN    &none          &none      &mo 2
            >;
        };

        layer_SymSec {
            bindings = <
 &trans          &trans     &trans        &trans     &trans    &trans            &trans                                                  &trans     &trans            &trans             &trans         &trans     &trans  &trans
 &trans           &none      &none         &none  &kp TILDE     &none            &trans                                                  &trans      &none     &kp LESS_THAN   &kp GREATER_THAN          &none      &none  &trans
 &trans  &kp UNDERSCORE  &kp MINUS  &kp ASTERISK  &kp EQUAL  &kp PLUS            &trans  &trans  &trans                  &trans  &trans  &trans  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp AMPERSAND  &kp CARET  &trans
 &trans           &none      &none         &none   &kp HASH     &none                            &trans                  &trans                      &none         &kp COLON              &none          &none     &trans  &trans
 &trans          &trans     &trans        &trans     &trans                      &trans  &trans  &trans                  &trans  &trans  &trans                       &trans             &trans         &trans     &trans  &trans
            >;
        };

        layer_Arrow {
            bindings = <
 &trans         &kp F1             &kp F2            &kp F3                &kp F4            &kp F5            &trans                                                  &trans       &kp F6           &kp F7          &kp F8           &kp F9  &kp F10  &trans
 &trans     &kp K_MUTE  &kp LG(LS(SPACE))            &trans                &trans      &kp CAPSLOCK            &trans                                                  &trans  &kp PAGE_UP         &kp HOME    &kp UP_ARROW          &kp END  &kp F11  &trans
 &trans  &kp LC(LG(V))  &kp LG(BACKSLASH)            &trans  &kp LS(LEFT_COMMAND)  &kp LS(LEFT_ALT)            &trans  &trans  &trans                  &trans  &trans  &trans  &kp PAGE_UP   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp F12  &trans
 &trans     &kp K_PREV         &kp K_NEXT  &kp K_PLAY_PAUSE          &kp K_VOL_DN      &kp K_VOL_UP                            &trans                  &trans                        &none  &kp LC(LS(TAB))     &kp LC(TAB)           &trans    &none   &none
 &trans         &trans             &trans            &trans                &trans                              &trans  &trans  &trans                  &trans  &trans  &trans                        &trans          &trans           &trans   &trans  &trans
            >;
        };

        layer_Sym {
            bindings = <
 &trans       &trans           &trans      &trans        &trans  &trans            &trans                                                  &trans  &trans                &trans                 &trans             &trans    &trans  &trans
 &trans        &none            &none       &none         &none   &none            &trans                                                  &trans   &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS              &none     &none  &trans
 &trans  &kp AT_SIGN  &kp EXCLAMATION  &kp DOLLAR   &kp PERCENT   &none            &trans  &trans  &trans                  &trans  &trans  &trans   &none        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp DOUBLE_QUOTES  &kp PIPE  &trans
 &trans       &trans            &none       &none  &kp QUESTION   &none                            &trans                  &trans                   &none             &kp SLASH          &kp BACKSLASH              &none     &none  &trans
 &trans       &trans           &trans      &trans        &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                        &trans                 &trans             &trans    &trans  &trans
            >;
        };

    };
};
